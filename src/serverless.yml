# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: todo-server
# app and org for use with dashboard.serverless.com
app: todo-server
org: jonwade

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x

# you can overwrite defaults here
  stage: dev
  region: eu-west-2
  cfnRole: arn:aws:iam::194844862910:role/cfnRole

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:DeleteItem"
      Resource:
        - "arn:aws:dynamodb:eu-west-2:194844862910:table/itemsTable"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

functions:
  experiment:
    handler: handler.experiment
    layers:
      - arn:aws:lambda:eu-west-2:194844862910:layer:libs:8
    events:
      - http:
          path: item/experiment
          method: post
  delete:
    handler: handler.deleteItem
    layers:
      - arn:aws:lambda:eu-west-2:194844862910:layer:libs:8
    events:
      - http:
          path: item/delete
          method: post
  create:
    handler: handler.createItem
    layers:
      - arn:aws:lambda:eu-west-2:194844862910:layer:libs:8
    events:
      - http:
          path: item/create
          method: post
      - sqs: arn:aws:sqs:eu-west-2:194844862910:todo-server-create

resources:
  Resources:
    itemsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: itemsTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
